<beans
   xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
   >
  
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="systemPropertiesMode">
      <bean id="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE"
	    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      </bean>
    </property>
    <property name="properties">
      <props>
	<prop key="dada.broker.name">DADA</prop>
	<prop key="dada.broker.uri">tcp://0.0.0.0:61616</prop>
	<prop key="dada.client.uri">tcp://localhost:61616</prop>
      </props>
    </property>
  </bean>

  <import resource="server.xml"/>

  <bean id="connection" factory-bean="connectionFactory" factory-method="createConnection"/>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>javax.jms.Connection</value></property>
    <property name="targetObject"><ref bean="connection"/></property>
    <property name="targetMethod"><value>start</value></property>
  </bean>

  <bean id="session" class="javax.jms.Session" factory-method="createSession" factory-bean="connection">
    <constructor-arg><value>false</value></constructor-arg>
    <constructor-arg>
      <bean id="javax.jms.Session.DUPS_OK_ACKNOWLEDGE"
	    class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      </bean>
    </constructor-arg>
  </bean>

  <bean id="executorService" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
    <constructor-arg><value>32</value></constructor-arg> <!-- TODO: should size dynamically according to h/w -->
  </bean>

  <bean id="queueFactory" class="org.dada.jms.QueueFactory"/>
  <bean id="topicFactory" class="org.dada.jms.TopicFactory"/>

  <bean id="sessionManagerInterface" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass">
      <value>java.lang.Class</value>
    </property>
    <property name="targetMethod">
      <value>forName</value>
    </property>
    <property name="arguments">
      <list>
	<value>org.dada.core.SessionManager</value>
      </list>
    </property>
  </bean>

  <bean id="sessionManagerMethodMapper" class="org.dada.jms.SimpleMethodMapper">
    <constructor-arg ref="sessionManagerInterface"></constructor-arg>
  </bean>

  <bean id="sessionManagerInvoker" class="org.dada.core.jms.POJOInvoker">
    <constructor-arg ref="sessionManagerMethodMapper"></constructor-arg>
  </bean>
  
  <bean id="externalSessionManagerServiceFactory" class="org.dada.core.jms.JMSServiceFactory">
    <constructor-arg ref="session"/>
    <constructor-arg><ref bean="sessionManagerInterface"/></constructor-arg>
    <constructor-arg ref="executorService"/>
    <constructor-arg><value>true</value></constructor-arg> <!-- trueAsync -->
    <constructor-arg><value>10000</value></constructor-arg> <!-- timeout -->
    <constructor-arg><bean class="org.dada.core.SessionManagerNameGetter"/></constructor-arg> <!-- nameGetter -->
    <constructor-arg ref="queueFactory"/> <!-- destinationFactory -->
    <constructor-arg ref="sessionManagerInvoker"/>
    <constructor-arg><value>POJO</value></constructor-arg>
  </bean>

  <bean id="viewInterface" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass">
      <value>java.lang.Class</value>
    </property>
    <property name="targetMethod">
      <value>forName</value>
    </property>
    <property name="arguments">
      <list>
	<value>org.dada.core.View</value>
      </list>
    </property>
  </bean>

  <bean id="viewMethodMapper" class="org.dada.jms.SimpleMethodMapper">
    <constructor-arg ref="viewInterface"></constructor-arg>
  </bean>

  <bean id="viewInvoker" class="org.dada.core.jms.POJOInvoker">
    <constructor-arg ref="viewMethodMapper"></constructor-arg>
  </bean>
  
  <bean id="externalViewServiceFactory" class="org.dada.core.jms.JMSServiceFactory">
    <constructor-arg ref="session"/>
    <constructor-arg><ref bean="viewInterface"/></constructor-arg>
    <constructor-arg ref="executorService"/>
    <constructor-arg><value>true</value></constructor-arg> <!-- trueAsync -->
    <constructor-arg><value>10000</value></constructor-arg> <!-- timeout -->
    <constructor-arg><bean class="org.dada.core.ViewNameGetter"/></constructor-arg> <!-- nameGetter -->
    <constructor-arg ref="topicFactory"/> <!-- destinationFactory -->
    <constructor-arg ref="viewInvoker"/>
    <constructor-arg><value>POJO</value></constructor-arg>
  </bean>

  <bean id="rwlock" class="EDU.oswego.cs.dl.util.concurrent.ReaderPreferenceReadWriteLock"/>

  <bean id="readSync" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>EDU.oswego.cs.dl.util.concurrent.ReaderPreferenceReadWriteLock</value></property>
    <property name="targetMethod"><value>readLock</value></property>
    <property name="targetObject"><ref bean="rwlock"/></property>
  </bean>

  <bean id="readLock" class="org.dada.core.SyncLock">
    <constructor-arg ref="readSync"/>
  </bean>


  <!-- <bean id="internalViewServiceFactory" class="org.dada.core.SynchronousServiceFactory"/> -->

  <bean id="internalViewServiceFactory" class="org.dada.core.AsynchronousServiceFactory">
    <constructor-arg><list><ref bean="viewInterface"/></list></constructor-arg>
    <constructor-arg ref="executorService"/>
    <constructor-arg ref="readLock"/>
  </bean>

  <bean id="writeSync" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock</value></property>
    <property name="targetMethod"><value>writeLock</value></property>
    <property name="targetObject"><ref bean="rwlock"/></property>
  </bean>

  <bean id="writeLock" class="org.dada.core.SyncLock">
    <constructor-arg ref="writeSync"/>
  </bean>
  <!-- and off we go ! -->

</beans>
