<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.dada</groupId>
    <artifactId>dada</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>dada2-web</artifactId>
  <packaging>war</packaging>
  <name>DADA2 :: Web</name>
  <description>DADA2 Web Functionality</description>

  <version>1.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.1.0.beta1</vaadin.version>
    <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
  </properties>
<!--
  <repositories>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
	<enabled>false</enabled>
      </releases>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
	<enabled>false</enabled>
      </releases>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
-->
  <dependencies>
    <dependency>
      <groupId>org.dada</groupId>
      <artifactId>dada2-core</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>tools.nrepl</artifactId>
      <version>0.2.3</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadin.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	</configuration>
      </plugin>
      <plugin>
	<groupId>com.theoryinpractise</groupId>
	<artifactId>clojure-maven-plugin</artifactId>
	<version>${clojure-maven-plugin.version}</version>
	<configuration>
	  <warnOnReflection>true</warnOnReflection>
	  <clojureOptions>-Xmx512m</clojureOptions>
	  <namespaces>
            <namespace>org.dada.*</namespace>
            <namespace>!org.dada.xxx.*</namespace>
	  </namespaces>
	  <testNamespaces>
            <namespace>org.dada.*</namespace>
	  </testNamespaces>
	  <!-- <testScript>junit_test_script.clj</testScript> --> <!-- script does not find any namespaces -->
	</configuration>
	<executions>
	  <execution>
            <id>clojure-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
	  </execution>
	  <execution>
            <id>clojure-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
	  </execution>
	  <execution>
            <id>clojure-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
	  </execution>
<!--
	  <execution>
            <id>clojure-gendoc</id>
            <phase>site</phase>
	    <configuration>
	      <outputDirectory>${project.build.directory}/site/clojure</outputDirectory> 
	      <clojureOptions>-Xmx256m</clojureOptions>
	      <generateTestDocumentation>false</generateTestDocumentation>
	    </configuration>
	    <goals>
	      <goal>gendoc</goal>
	    </goals>
	  </execution>
-->
	</executions>
      </plugin>
      <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
      <!-- directory is cleaned properly -->
      <plugin>
	<artifactId>maven-clean-plugin</artifactId>
	<version>2.4.1</version>
	<configuration>
	  <filesets>
	    <fileset>
	      <directory>src/main/webapp/VAADIN/widgetsets</directory>
	    </fileset>
	  </filesets>
	</configuration>
      </plugin>
      <plugin>
	<groupId>com.vaadin</groupId>
	<artifactId>vaadin-maven-plugin</artifactId>
	<version>${vaadin.plugin.version}</version>
	<configuration>
	  <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
	  <!-- <runTarget>mobilemail</runTarget> -->
	  <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
	       way compatible with Vaadin eclipse plugin. -->
	  <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </webappDirectory>
	  <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </hostedWebapp>
	  <noServer>true</noServer>
	  <!-- Remove draftCompile when project is ready -->
	  <draftCompile>false</draftCompile>
	  <compileReport>true</compileReport>
	  <style>OBF</style>
	  <strict>true</strict>
	  <runTarget>http://localhost:8080/</runTarget>
	</configuration>
	<executions>
	  <execution>
	    <configuration>
	      <!-- if you don't specify any modules, the plugin will find them -->
	      <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
		   </modules> -->
	    </configuration>
	    <goals>
	      <goal>resources</goal>
	      <goal>update-widgetset</goal>
	      <goal>compile</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.eclipse.jetty</groupId>
	<artifactId>jetty-maven-plugin</artifactId>
	<configuration>
          <contextPath>/</contextPath>
          <webAppConfig>
            <extraClasspath>src/main/clojure</extraClasspath>
          </webAppConfig>
          <scanIntervalSeconds>5</scanIntervalSeconds>
          <scanTargetPatterns>
            <scanTargetPattern>
              <directory>src/main/clojure</directory>
              <includes>
                <include>**/*.clj</include>
              </includes>
            </scanTargetPattern>
          </scanTargetPatterns>
	</configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>1.0.0</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>com.vaadin</groupId>
		    <artifactId>
		      vaadin-maven-plugin
		    </artifactId>
		    <versionRange>
		      [7.0.0.rc1,)
		    </versionRange>
		    <goals>
		      <goal>resources</goal>
		      <goal>update-widgetset</goal>
		      <goal>compile</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore></ignore>
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>
	  </configuration>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
