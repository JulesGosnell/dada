<?xml version="1.0"?>

<document>
  
  <properties>
    <title>Distributed Assimilation and Dissemination Architecture</title>
  </properties>

  <body>
    <section name="DADA - Distributed Assimilation and Dissemination Architecture">
      
      <p/>

DADA is essentially a set of Java components for building a highly
concurrent and distributed graph of interconnected MVC Models and
Views.

      <p/>

A typical pattern would comprise a Feed Model viewed by a number Views
the other side of which are more Models viewed by more Views etc...

      <p/>

Updates can be filtered efficiently into specific Views through the
use of another type of View called a Router. Routers support the
thread-safe on-demand creation of Views when relevant data arrive.

      <p/>

ModelViews may be Aggregators - i.e. they may view a number of other
Models and aggregate the data they receive from these - perhaps
e.g. totalling up amounts...


      <p/>

Views may be InVM with their Model or transparently remoted via a JMS
provider.

      <p/>

DADA is intended to be used in highly scalable applications and can
handle thousands of updates a second.

      <p/>

    </section>
  </body>

</document>
