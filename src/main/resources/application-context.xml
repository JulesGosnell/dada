<beans
   xmlns="http://www.springframework.org/schema/beans"
   xmlns:amq="http://activemq.apache.org/schema/core"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"
   >
  
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

  <amq:broker useJmx="true" persistent="false" brokerName="${server.name}" advisorySupport="false">

    <amq:destinationPolicy>
      <amq:policyMap>
	<amq:policyEntries>
	  <amq:policyEntry queue=">" optimizedDispatch="true"/>
	</amq:policyEntries>
      </amq:policyMap>
    </amq:destinationPolicy>

    <amq:transportConnectors>
      <!-- <amq:transportConnector name="nio" uri="nio://0.0.0.0:61616"/> -->
      <amq:transportConnector name="openwire" uri="tcp://localhost:61616" discoveryUri="multicast://default"/>
    </amq:transportConnectors>

  </amq:broker>

  <bean id="connectionUrl" class="java.lang.String">
    <constructor-arg><value>vm://${server.name}?marshal=false&amp;broker.persistent=false&amp;create=false</value></constructor-arg>
  </bean>

  <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <constructor-arg ref="connectionUrl"></constructor-arg>
    <property name="optimizedMessageDispatch"><value>true</value></property>
    <property name="objectMessageSerializationDefered"><value>true</value></property>
  </bean>

  <bean id="connection" factory-bean="connectionFactory" factory-method="createConnection"/>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>javax.jms.Connection</value></property>
    <property name="targetObject"><ref bean="connection"/></property>
    <property name="targetMethod"><value>start</value></property>
  </bean>

  <!-- how hard can this be -->
  <!-- javax.jms.Session.class.getField("AUTO_ACKNOWLEDGE").get(null) -->
  <bean id="autoAcknowledge" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	<property name="targetClass">
	  <value>java.lang.Class</value>
	</property>
	<property name="targetMethod">
	  <value>getField</value>
	</property>
	<property name="targetObject">
	  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetClass">
	      <value>java.lang.Class</value>
	    </property>
	    <property name="targetMethod">
	      <value>forName</value>
	    </property>
	    <property name="arguments">
	      <list>
		<value>javax.jms.Session</value>
	      </list>
	    </property>
	  </bean>
	</property>
	<property name="arguments">
	  <list>
	    <value>AUTO_ACKNOWLEDGE</value>
	  </list>
	</property>
      </bean>
    </property>
    <property name="targetMethod">
      <value>get</value>
    </property>
    <property name="arguments">
      <list>
      </list>
    </property>
  </bean>

  <bean id="session" class="javax.jms.Session" factory-method="createSession" factory-bean="connection">
    <constructor-arg><value>false</value></constructor-arg>
    <constructor-arg><ref bean="autoAcknowledge"/></constructor-arg>
  </bean>

  <bean id="executorService" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
    <constructor-arg><value>32</value></constructor-arg> <!-- TODO: should size dynamically according to h/w -->
  </bean>

  <bean id="queueFactory" class="org.dada.jms.QueueFactory"/>
  
  <bean id="metaModelInterface" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass">
      <value>java.lang.Class</value>
    </property>
    <property name="targetMethod">
      <value>forName</value>
    </property>
    <property name="arguments">
      <list>
	<value>org.dada.core.MetaModel</value>
      </list>
    </property>
  </bean>

  <bean id="externalMetaModelServiceFactory" class="org.dada.jms.JMSServiceFactory">
    <constructor-arg ref="session"/>
    <constructor-arg><ref bean="metaModelInterface"/></constructor-arg>
    <constructor-arg ref="executorService"/>
    <constructor-arg><value>true</value></constructor-arg> <!-- trueAsync -->
    <constructor-arg><value>10000</value></constructor-arg> <!-- timeout -->
    <constructor-arg><bean class="org.dada.core.MetaModelNameGetter"/></constructor-arg> <!-- nameGetter -->
    <constructor-arg ref="queueFactory"/> <!-- destinationFactory -->
  </bean>

  <bean id="modelInterface" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass">
      <value>java.lang.Class</value>
    </property>
    <property name="targetMethod">
      <value>forName</value>
    </property>
    <property name="arguments">
      <list>
	<value>org.dada.core.Model</value>
      </list>
    </property>
  </bean>

  <bean id="externalModelServiceFactory" class="org.dada.jms.JMSServiceFactory">
    <constructor-arg ref="session"/>
    <constructor-arg><ref bean="modelInterface"/></constructor-arg>
    <constructor-arg ref="executorService"/>
    <constructor-arg><value>true</value></constructor-arg> <!-- trueAsync -->
    <constructor-arg><value>10000</value></constructor-arg> <!-- timeout -->
    <constructor-arg><bean class="org.dada.core.ModelNameGetter"/></constructor-arg> <!-- nameGetter -->
    <constructor-arg ref="queueFactory"/> <!-- destinationFactory -->
  </bean>

  <bean id="viewInterface" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass">
      <value>java.lang.Class</value>
    </property>
    <property name="targetMethod">
      <value>forName</value>
    </property>
    <property name="arguments">
      <list>
	<value>org.dada.core.View</value>
      </list>
    </property>
  </bean>


  <bean id="rwlock" class="EDU.oswego.cs.dl.util.concurrent.ReaderPreferenceReadWriteLock"/>

  <bean id="readSync" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>EDU.oswego.cs.dl.util.concurrent.ReaderPreferenceReadWriteLock</value></property>
    <property name="targetMethod"><value>readLock</value></property>
    <property name="targetObject"><ref bean="rwlock"/></property>
  </bean>

  <bean id="readLock" class="org.dada.core.SyncLock">
    <constructor-arg ref="readSync"/>
  </bean>

  <!-- <bean id="internalViewServiceFactory" class="org.dada.core.SynchronousServiceFactory"/> -->

  <bean id="internalViewServiceFactory" class="org.dada.core.AsynchronousServiceFactory">
       <constructor-arg><list><ref bean="viewInterface"/></list></constructor-arg>
       <constructor-arg ref="executorService"/>
       <constructor-arg ref="readLock"/>
  </bean>

  <bean id="stringMetadata" class="org.dada.core.StringMetadata">
    <constructor-arg><value>Name</value></constructor-arg>
  </bean>

  <bean id="metaModelName" class="java.lang.String">
    <constructor-arg><value>${server.name}.MetaModel</value></constructor-arg>
  </bean>
  
  <bean id="metaModel" class="org.dada.core.MetaModelImpl">
    <constructor-arg ref="metaModelName"/>
    <constructor-arg ref="stringMetadata"/>
    <constructor-arg ref="externalModelServiceFactory"/>
  </bean>
  
  <!-- add metamodel to itself-->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>org.dada.core.View</value></property>
    <property name="targetMethod"><value>update</value></property>
    <property name="targetObject"><ref bean="metaModel"/></property>
    <property name="arguments">
      <list>
	<bean class="org.springframework.beans.factory.config.ListFactoryBean">
	  <property name="sourceList">
	    <list>
	      <bean class="org.dada.core.Update">
		<constructor-arg><null/></constructor-arg>
		<constructor-arg ref="metaModel"/>
	      </bean>
	    </list>
	  </property>
	</bean>
	<bean class="org.springframework.beans.factory.config.ListFactoryBean">
	  <property name="sourceList"><list/></property>
	</bean>
	<bean class="org.springframework.beans.factory.config.ListFactoryBean">
	  <property name="sourceList"><list/></property>
	</bean>
      </list>
    </property>
  </bean>
    
  <!-- start the metamodel -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>org.dada.core.Model</value></property>
    <property name="targetObject"><ref bean="metaModel"/></property>
    <property name="targetMethod"><value>start</value></property>
  </bean>

  <!-- create a JMS endpoint for the metamodel -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass"><value>org.dada.core.ServiceFactory</value></property>
    <property name="targetObject"><ref bean="externalMetaModelServiceFactory"/></property>
    <property name="targetMethod"><value>server</value></property>
    <property name="arguments">
      <list>
	<ref bean="metaModel"/> 
	<ref bean="metaModelName"/> 
      </list>
    </property>
  </bean>

  <!-- and off we go ! -->

</beans>
